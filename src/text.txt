What is React?

1) React is a JavaScript library (not a framework) developed by Facebook (Meta) for building user interfaces (UIs), especially Single Page Applications (SPAs).

2) It helps developers build reusable UI components that update efficiently when data changes.

Instead of reloading a whole webpage when something changes, React updates only the parts of the UI that need to change.

-------
Why do we use React?



1) Component-Based Architecture

	Breaks UI into small, reusable pieces (e.g., Navbar, Button, Card).

	Easier to develop, test, and maintain.

2) Virtual DOM (Performance Boost)

	React uses a Virtual DOM (a lightweight copy of the actual DOM).

	When data changes, React updates only the changed parts instead of re-rendering the whole page → 	makes apps faster.

3) Reusable & Scalable

	Components can be reused across projects.

	Helps in building large, scalable applications easily.

4) One-Way Data Flow

	Data flows in a single direction (parent → child), making it predictable and easy to debug.

5) Rich Ecosystem

	Huge community, libraries, and tools (like Redux, Next.js).

6) Cross-Platform

	With React Native, you can build mobile apps (iOS/Android) using the same knowledge.

------
Why do we need React?

	It makes UI development faster, cleaner, and more efficient.

	Provides a better user experience with smooth updates without page reloads.
---

## styleing

    global file
    External file styleing
    module.css file styleing
    object way styleing
    inline styleing

## props

  props is nothing but drilling data from one 
  component to another component
   

        passing data useng props variable
        Destructureing ob props

## usestate()
    usestate is react hook that allows you to add state(data that can change over time)
    to a functionl component

    const[state,setState]=usestate(initial value)

    state=current value
    setState=a function that updartes the state(current value)
    initial value=starting value



## conditional rendering

    conditional rendering  mens showing or hidding parts of UI 
    based on some conditions

    ternary operator
    logical operator

## listrendering 

    rendering multiple item dynamically useing .map(),reducer(), filter(), find()

## UseEffect()

    In react, UseEffect is a hook let you peerform side effect in functionl components.
    Side effect are task that happends outside the nornal react rendering process,like:

        Fetching data from API 
        Updating the browser DOM manually
        Starting /stoping timers

    if dependency is not mensioned meance it will execute
    only once at the initial itself.

    UseEffect(()=>{
        //code
    },[dependency 1, dependency 2.... ])

## useref()

    useref() is a react hook that gives you a box (.current) you can store
    anything in -num,str,obj,function,een DOm elements.

    that value persistes b/w rendering

    updating it does not causes your componrent to 
    re-render.

## useContext()

    Passing data from a parent component down deeply to deep nested components is annoying.

    Normally , you'd have to pass manually through each level (Calling drilling)

    Usecontext,lts you skip all the middle compoonent and share data directly.

        create a context
        Provide a value
        Consume the value

## useReducer()

    const [state,dispatch]=useReducer(ReducerFunction,initialState)

    state--current state (like usestate value)
    dispatch--a function to tell the reducer what to do
    ReducerFunction(state,action)--the logic that returns a new state
    initialState-- starting value

## Routing in react and Nested Routing

    Routing means navigating b/w different pages  in a web applications 
    without refreshing the browser.

    In traditional website ,clicking a link reloads the hole page.

    In react ( single page application) ,Routing  lets us changes the
    view without reloading.

            Better Performance
            smooth User experience
            Control over navigating without server request

    npm install react-router-dom

        <BrowserRouter>
        <Routes>
         <Route/>
         <Route/>
        </Routes>
        </BrowserRouter>

## useParams()

    useParams is a React Router hook that lets you access dynamic parameters from the URL.

	It’s commonly used when you have routes with dynamic segments like /users/:id or /products/:productId.


## useNavigate()

    it is used to navigate from one component to another component.